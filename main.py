import asyncio
import logging
import os
import json
from datetime import datetime, date
from pathlib import Path
from random import choice

from aiogram import Bot, Dispatcher, F
from aiogram.filters import CommandStart, Command
from aiogram.types import Message, CallbackQuery
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.client.default import DefaultBotProperties
from dotenv import load_dotenv

# –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∑–∞–¥–∞—á
from apscheduler.schedulers.asyncio import AsyncIOScheduler

# ====== –ù–ê–°–¢–†–û–ô–ö–ò / ENV ======
load_dotenv()
BOT_TOKEN = os.getenv("BOT_TOKEN", "").strip()
if not BOT_TOKEN or BOT_TOKEN.startswith("–í–°–¢–ê–í–¨"):
    raise SystemExit("‚ùå BOT_TOKEN –Ω–µ –∑–∞–¥–∞–Ω. –û—Ç–∫—Ä–æ–π—Ç–µ .env –∏ –ø—Ä–æ–ø–∏—à–∏—Ç–µ —Ç–æ–∫–µ–Ω –æ—Ç @BotFather")

SECRET_CODE = os.getenv("SECRET_CODE", "–µ–∂–µ–≤–∏–∫–∞").strip()  # –°–µ–∫—Ä–µ—Ç–Ω–æ–µ —Å–ª–æ–≤–æ
GF_NAME = os.getenv("GF_NAME", "–õ—é–±–∏–º–∞—è").strip()
ANNIVERSARY = os.getenv("ANNIVERSARY", "2024-02-14").strip()  # —Ñ–æ—Ä–º–∞—Ç YYYY-MM-DD

# —Ñ–∞–π–ª—ã –¥–∞–Ω–Ω—ã—Ö
DATA_DIR = Path("./data")
DATA_DIR.mkdir(exist_ok=True)
ALLOWED_FILE = DATA_DIR / "allowed.json"

# ====== –°–ü–ò–°–ö–ò –°–û–û–ë–©–ï–ù–ò–ô ======

# 20+ —É—Ç—Ä–µ–Ω–Ω–∏—Ö –Ω–∞–ø—É—Ç—Å—Ç–≤–∏–π
GOOD_MORNINGS = [
    "–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ, {name}! ‚òÄÔ∏è –ü—É—Å—Ç—å —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–π –¥–µ–Ω—å –±—É–¥–µ—Ç –ª—ë–≥–∫–∏–º –∏ –¥–æ–±—Ä—ã–º.",
    "–° –¥–æ–±—Ä—ã–º —É—Ç—Ä–æ–º, {name}! üå∏ –í–µ—Ä—é –≤ —Ç–µ–±—è ‚Äî –≤—Å—ë –ø–æ–ª—É—á–∏—Ç—Å—è!",
    "–ü—Ä–æ—Å—ã–ø–∞–π—Å—è, —Å–æ–ª–Ω—ã—à–∫–æ ‚òÄÔ∏è –°–µ–≥–æ–¥–Ω—è –±—É–¥–µ—Ç –º–Ω–æ–≥–æ –ø–æ–≤–æ–¥–æ–≤ —É–ª—ã–±–∞—Ç—å—Å—è.",
    "–ù–æ–≤—ã–π –¥–µ–Ω—å ‚Äî –Ω–æ–≤—ã–µ –ø–æ–±–µ–¥—ã, {name}! üí™ –Ø —Ä—è–¥–æ–º –º—ã—Å–ª—å—é.",
    "–ü—É—Å—Ç—å —É—Ç—Ä–æ –ø—Ä–∏–Ω–µ—Å—ë—Ç –Ω–µ–∂–Ω–æ—Å—Ç—å, –∞ –¥–µ–Ω—å ‚Äî –º–∞–ª–µ–Ω—å–∫–∏–µ —á—É–¥–µ—Å–∞ ‚ú®",
    "–û–±–Ω–∏–º–∏ —ç—Ç–æ—Ç –¥–µ–Ω—å, {name}, –æ–Ω —É–∂–µ –æ–±–Ω–∏–º–∞–µ—Ç —Ç–µ–±—è –≤ –æ—Ç–≤–µ—Ç ü§ç",
    "–ü—É—Å—Ç—å —Å–µ–≥–æ–¥–Ω—è –≤—Å—ë —Å–∫–ª–∞–¥—ã–≤–∞–µ—Ç—Å—è –º—è–≥–∫–æ –∏ –ø–æ-—Ç–≤–æ–µ–º—É ‚òïÔ∏è",
    "–¢—ã —Å–∏–ª—å–Ω–∞—è –∏ –ø—Ä–µ–∫—Ä–∞—Å–Ω–∞—è. –≠—Ç–æ—Ç –¥–µ–Ω—å –æ–± —ç—Ç–æ–º —É–∑–Ω–∞–µ—Ç üòâ",
    "–ü—É—Å—Ç—å —É—Å—Ç–∞–ª–æ—Å—Ç—å –æ—Ç—Å—Ç—É–ø–∏—Ç, –∞ –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ –Ω–∞–π–¥—ë—Ç —Ç–µ–±—è –ø–µ—Ä–≤—ã–º üåø",
    "–° –¥–æ–±—Ä—ã–º —É—Ç—Ä–æ–º! –ü–µ–π –≤–æ–¥–∏—á–∫—É, –¥—ã—à–∏ –≥–ª—É–±–∂–µ ‚Äî –∏ –≤–ø–µ—Ä—ë–¥ –∫ —Ö–æ—Ä–æ—à–µ–º—É.",
    "–ü—É—Å—Ç—å –∫–∞–∂–¥—ã–π —à–∞–≥ —Å–µ–≥–æ–¥–Ω—è –±—É–¥–µ—Ç —Å–ø–æ–∫–æ–π–Ω—ã–º –∏ —É–≤–µ—Ä–µ–Ω–Ω—ã–º üë£",
    "–ü—É—Å—Ç—å —É–¥–∞—á–∞ —Å–∞–º–∞ –Ω–∞–π–¥—ë—Ç —Ç–µ–±—è, –∞ —è ‚Äî –≤—Å–µ–≥–¥–∞ –±—É–¥—É —Ä—è–¥–æ–º –º—ã—Å–ª—è–º–∏ üíå",
    "–°–µ–≥–æ–¥–Ω—è –º–∏—Ä —á—É—Ç–æ—á–∫—É –ª—É—á—à–µ, –ø–æ—Ç–æ–º—É —á—Ç–æ –≤ –Ω—ë–º –µ—Å—Ç—å —Ç—ã ‚ú®",
    "–ü—É—Å—Ç—å —Ç–≤–æ–∏ –≥–ª–∞–∑–∞ —Å–µ–≥–æ–¥–Ω—è —Å–∏—è—é—Ç —á–∞—â–µ –æ–±—ã—á–Ω–æ–≥–æ ‚ú®",
    "–î–µ–Ω—å –±—É–¥–µ—Ç –¥–æ–±—Ä—ã–º, –ø–æ—Ç–æ–º—É —á—Ç–æ —Ç—ã –µ–≥–æ —Ç–∞–∫–æ–π —Å–¥–µ–ª–∞–µ—à—å, {name} üåº",
    "–ü—É—Å—Ç—å –Ω–∞ –≤—Å—ë –≤–∞–∂–Ω–æ–µ –Ω–∞–π–¥—É—Ç—Å—è —Å–∏–ª—ã –∏ –≤—Ä–µ–º—è, –∞ –Ω–∞ –ª–∏—à–Ω–µ–µ ‚Äî –Ω–µ—Ç üôÇ",
    "–ü–æ–º–Ω–∏: —Ç—ã –¥–æ—Å—Ç–æ–π–Ω–∞ —Å–∞–º–æ–≥–æ –ª—É—á—à–µ–≥–æ. –ò —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–π –¥–µ–Ω—å —ç—Ç–æ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç üíñ",
    "–ï—Å–ª–∏ —Å—Ç–∞–Ω–µ—Ç —à—É–º–Ω–æ ‚Äî —É —Ç–µ–±—è –≤—Å–µ–≥–¥–∞ –µ—Å—Ç—å –º–æ–π —Ç–∏—Ö–∏–π –æ–±–Ω–∏–º–∞—Ç–µ–ª—å ü´∂",
    "–ü—É—Å—Ç—å –º–µ—á—Ç—ã –ø–æ–¥—Å–∫–∞–∂—É—Ç –º–∞—Ä—à—Ä—É—Ç, –∞ —Å–µ—Ä–¥—Ü–µ ‚Äî –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ç–µ–º–ø üí´",
    "–¢—ã —Å–ø—Ä–∞–≤–∏—à—å—Å—è —Å–æ –≤—Å–µ–º, —á—Ç–æ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–ª–∞. –ò –µ—â—ë –æ—Å—Ç–∞–Ω—É—Ç—Å—è —Å–∏–ª—ã –Ω–∞ —á–∞–π üçµ",
    "–î–æ–±—Ä–æ–≥–æ —É—Ç—Ä–∞, –∫—Ä–∞—Å–∞–≤–∏—Ü–∞! –ü—É—Å—Ç—å —Ä–∞–¥–æ—Å—Ç–∏ –±—É–¥–µ—Ç –±–æ–ª—å—à–µ, —á–µ–º –ø–æ–≤–æ–¥–æ–≤ –≤–æ–ª–Ω–æ–≤–∞—Ç—å—Å—è üå∑",
]

# 100 –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç–æ–≤ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é (–µ—Å–ª–∏ –Ω–µ—Ç —Ñ–∞–π–ª–∞ compliments.txt)
COMPLIMENTS_DEFAULT = [
    "–¢—ã ‚Äî –º–æ—ë —Å–∞–º–æ–µ –ª—é–±–∏–º–æ–µ —á—É–¥–æ.",
    "–° —Ç–æ–±–æ–π –¥–∞–∂–µ –±—É–¥–Ω–∏ –ø–æ—Ö–æ–∂–∏ –Ω–∞ –ø—Ä–∞–∑–¥–Ω–∏–∫.",
    "–° —Ç–æ–±–æ–π —è —É–ª—ã–±–∞—é—Å—å –¥–∞–∂–µ –º—ã—Å–ª–µ–Ω–Ω–æ.",
    "–¢—ã ‚Äî –º–æ—ë —Å–ø–æ–∫–æ–π—Å—Ç–≤–∏–µ –∏ –º–æ—è –∏—Å–∫—Ä–∞ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ.",
    "–¢—ã ‚Äî –ª—É—á—à–µ–µ —Ä–µ—à–µ–Ω–∏–µ –≤—Å–µ—Ö –º–æ–∏—Ö –∑–∞–¥–∞—á.",
    "–¢–≤–æ–∏ –≥–ª–∞–∑–∞ ‚Äî –º–æ–π –¥–æ–º.",
    "–° —Ç–æ–±–æ–π –ª—é–±–æ–µ ¬´–ø–æ—Ç–æ–º¬ª —Ö–æ—á–µ—Ç—Å—è –ø—Ä–µ–≤—Ä–∞—Ç–∏—Ç—å –≤ ¬´—Å–µ–π—á–∞—Å¬ª.",
    "–¢—ã –¥–µ–ª–∞–µ—à—å –º–æ–∏ –¥–Ω–∏ —Ç–µ–ø–ª–µ–µ –∏ —Å–≤–µ—Ç–ª–µ–µ.",
    "–¢—ã –ø—Ä–µ–∫—Ä–∞—Å–Ω–∞ —Ç–∞–∫–∏–º –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–º –æ–±—Ä–∞–∑–æ–º ‚Äî —ç—Ç–æ –º–∞–≥–∏—è.",
    "–ú–Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è –ª—é–±–æ–≤–∞—Ç—å—Å—è —Ç–æ–±–æ–π, –∫–∞–∫ –ª—é–±–∏–º–æ–π –ø–µ—Å–Ω–µ–π.",
    "–¢—ã —É–º–µ–µ—à—å –ø—Ä–µ–≤—Ä–∞—â–∞—Ç—å —Ç–∏—à–∏–Ω—É –≤ —É—é—Ç.",
    "–¢–≤–æ–∏ –º—ã—Å–ª–∏ ‚Äî –∫–∞–∫ –∑–≤—ë–∑–¥—ã: —è—Ä–∫–∏–µ –∏ –¥–æ–±—Ä—ã–µ.",
    "–° —Ç–æ–±–æ–π –¥–∞–∂–µ –∫–æ—Ñ–µ –≤–∫—É—Å–Ω–µ–µ.",
    "–¢—ã ‚Äî —á–µ–ª–æ–≤–µ–∫, —Å –∫–æ—Ç–æ—Ä—ã–º —Ö–æ—á–µ—Ç—Å—è –¥–µ–ª–∏—Ç—å –∫–∞–∂–¥–æ–µ ¬´—Å–º–æ—Ç—Ä–∏!¬ª",
    "–¢–≤–æ—ë —Å–µ—Ä–¥—Ü–µ ‚Äî –º–æ—è –º—è–≥–∫–∞—è —Å–∏–ª–∞.",
    "–¢—ã —Ç–∞–ª–∞–Ω—Ç–ª–∏–≤–∞ –±—ã—Ç—å —Å–æ–±–æ–π ‚Äî –∏ —ç—Ç–æ –±–µ—Å—Ü–µ–Ω–Ω–æ.",
    "–¢–≤–æ—è —É–ª—ã–±–∫–∞ ‚Äî –º–æ–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π —Ä–∞—Å—Å–≤–µ—Ç.",
    "–¢—ã –¥–µ–ª–∞–µ—à—å –º–∏—Ä –≤–æ–∫—Ä—É–≥ –∞–∫–∫—É—Ä–∞—Ç–Ω–µ–µ –∏ —Ç–µ–ø–ª–µ–µ.",
    "–¢—ã –≤–¥–æ—Ö–Ω–æ–≤–ª—è–µ—à—å –ø—Ä–æ—Å—Ç–æ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ–º.",
    "–° —Ç–æ–±–æ–π —Ö–æ—á–µ—Ç—Å—è –±—ã—Ç—å –ª—É—á—à–µ–π –≤–µ—Ä—Å–∏–µ–π —Å–µ–±—è.",
    "–¢—ã —É–º–µ–µ—à—å —Å–ª—ã—à–∞—Ç—å –ø–æ-–Ω–∞—Å—Ç–æ—è—â–µ–º—É.",
    "–¢—ã ‚Äî –º–æ—ë —Å–ø–æ–∫–æ–π–Ω–æ–µ ¬´–≤—Å—ë —Ö–æ—Ä–æ—à–æ¬ª.",
    "–í —Ç–≤–æ–∏—Ö —Å–ª–æ–≤–∞—Ö –≤—Å–µ–≥–¥–∞ –º–Ω–æ–≥–æ —Å–º—ã—Å–ª–∞ –∏ —Å–≤–µ—Ç–∞.",
    "–¢—ã ‚Äî —Ä–µ–¥–∫–∏–π —á–µ–ª–æ–≤–µ–∫ ¬´–∏ –∫—Ä–∞—Å–∏–≤—ã–π, –∏ —É–º–Ω—ã–π¬ª.",
    "–¢–≤–æ–π —Å–º–µ—Ö –ª–µ—á–∏—Ç –ª—É—á—à–µ –≤–∏—Ç–∞–º–∏–Ω–æ–≤.",
    "–¢–≤–æ—è –∑–∞–±–æ—Ç–∞ ‚Äî —ç—Ç–æ —É—é—Ç –≤ –∫–≤–∞–¥—Ä–∞—Ç–µ.",
    "–¢—ã –¥–µ–ª–∞–µ—à—å —Å–ª–æ–∂–Ω–æ–µ –ø—Ä–æ—â–µ –æ–¥–Ω–∏–º –≤–∑–≥–ª—è–¥–æ–º.",
    "–¢—ã ‚Äî –º–æ—ë –ª—é–±–∏–º–æ–µ —Å–ª—É—á–∞–π–Ω–æ-–Ω–µ-—Å–ª—É—á–∞–π–Ω–æ–µ.",
    "–†—è–¥–æ–º —Å —Ç–æ–±–æ–π —É –º–µ–Ω—è –ø–æ–ª—É—á–∞—é—Ç—Å—è –¥–æ–±—Ä—ã–µ –¥–Ω–∏.",
    "–¢—ã ‚Äî –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–æ, —á—Ç–æ –Ω–µ–∂–Ω–æ—Å—Ç—å —Å–∏–ª—å–Ω–µ–µ.",
    "–¢—ã –Ω–æ—Å–∏—à—å –∫—Ä–∞—Å–æ—Ç—É –ª–µ–≥–∫–æ, –∫–∞–∫ –≤–æ–∑–¥—É—Ö.",
    "–° —Ç–æ–±–æ–π –º–æ–∂–Ω–æ –º–æ–ª—á–∞—Ç—å ‚Äî –∏ —ç—Ç–æ —Ä–∞–∑–≥–æ–≤–æ—Ä.",
    "–¢—ã ‚Äî –º–æ–π –º–∞–ª–µ–Ω—å–∫–∏–π –∫–æ—Å–º–æ—Å.",
    "–í —Ç–µ–±–µ –∫—Ä–∞—Å–∏–≤–æ –¥–∞–∂–µ —É–ø–æ—Ä—Å—Ç–≤–æ.",
    "–¢—ã —É–º–µ–µ—à—å –≤—ã–±–∏—Ä–∞—Ç—å –≥–ª–∞–≤–Ω–æ–µ.",
    "–¢–≤–æ—ë ¬´–ø–æ–ª—É—á–∏—Ç—Å—è¬ª –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Å–±—ã–≤–∞–µ—Ç—Å—è.",
    "–¢—ã ‚Äî —á–µ–ª–æ–≤–µ–∫, –∫–æ—Ç–æ—Ä–æ–º—É –≤–µ—Ä—è—Ç —Ä–∞—Å—Ç–µ–Ω–∏—è –∏ –∫–æ—Ç—ã.",
    "–¢—ã —É–º–µ–µ—à—å –±–µ—Ä–µ–∂–Ω–æ —Ä–∞–¥–æ–≤–∞—Ç—å—Å—è –º–µ–ª–æ—á–∞–º.",
    "–¢—ã ‚Äî —Ä–µ–¥–∫–∞—è –∫–æ–º–±–∏–Ω–∞—Ü–∏—è —Ç–µ–ø–ª–∞ –∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∞.",
    "–¢—ã ‚Äî –º—è–≥–∫–∏–π —è–∫–æ—Ä—å –∏ –ª—ë–≥–∫–∏–π –ø–∞—Ä—É—Å.",
    "–¢–≤–æ–∏ –∏–¥–µ–∏ –ø–∞—Ö–Ω—É—Ç —Å–≤–µ–∂–µ—Å—Ç—å—é.",
    "–¢—ã ‚Äî –∫–∞–∫ —É—Ç—Ä–æ –ø–æ—Å–ª–µ –¥–æ–∂–¥—è.",
    "–¢—ã –∏–∑ —Ç–µ—Ö –ª—é–¥–µ–π, —Å –∫–µ–º —Ö–æ—Ä–æ—à–æ –∏ —Ç–∏—Ö–æ, –∏ –≥—Ä–æ–º–∫–æ.",
    "–í —Ç–µ–±–µ —É–¥–∏–≤–∏—Ç–µ–ª—å–Ω–æ –ª–∞–¥–Ω–æ –≤—Å—ë —Å–æ –≤—Å–µ–º.",
    "–¢—ã ‚Äî —É—é—Ç –≤ —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–º –≤–∏–¥–µ.",
    "–¢–≤–æ—è –∏—Å–∫—Ä–µ–Ω–Ω–æ—Å—Ç—å –æ–±–µ–∑–æ—Ä—É–∂–∏–≤–∞–µ—Ç.",
    "–¢—ã ‚Äî –º–æ–π —Å–∞–º—ã–π –∫—Ä–∞—Å–∏–≤—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç –∑–∞ ¬´—á—É–¥–µ—Å–∞ –µ—Å—Ç—å¬ª.",
    "–¢—ã —Å–≤–µ—Ç–∏—à—å—Å—è –¥–∞–∂–µ –≤ —Å–µ—Ä—ã—Ö –¥–Ω—è—Ö.",
    "–° —Ç–æ–±–æ–π —É –º–∏—Ä–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞.",
    "–¢—ã ‚Äî –Ω–µ–∂–Ω–æ—Å—Ç—å, –∫–æ—Ç–æ—Ä–∞—è —É–º–µ–µ—Ç –ø–æ—Å—Ç–æ—è—Ç—å –∑–∞ —Å–µ–±—è.",
    "–¢–≤–æ—ë ¬´—Å–ø–∞—Å–∏–±–æ¬ª –∑–≤—É—á–∏—Ç –∫–∞–∫ –º—É–∑—ã–∫–∞.",
    "–¢—ã —É–º–µ–µ—à—å –¥–µ–ª–∞—Ç—å –≤–∞–∂–Ω–æ–µ –Ω–µ—Å—Ç—Ä–∞—à–Ω—ã–º.",
    "–¢—ã ‚Äî —á–µ–ª–æ–≤–µ–∫ ¬´–¥–∞–≤–∞–π –ø–æ–ø—Ä–æ–±—É–µ–º¬ª.",
    "–° —Ç–æ–±–æ–π –¥–∞–∂–µ –æ–∂–∏–¥–∞–Ω–∏–µ –ø—Ä–∏—è—Ç–Ω–æ–µ.",
    "–¢—ã ‚Äî –º–æ—è –ª—é–±–∏–º–∞—è –ø—Ä–∏–≤—ã—á–∫–∞.",
    "–¢—ã –ø—Ä–æ—Å—Ç–æ –∏–¥—ë—à—å ‚Äî –∏ –≤—Å—ë —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –Ω–∞ —Å–≤–æ–∏ –º–µ—Å—Ç–∞.",
    "–¢–≤–æ–∏ –æ–±—ä—è—Ç–∏—è ‚Äî –ª—É—á—à–∏–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫.",
    "–¢—ã ‚Äî –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ, –≥–¥–µ —Å–ø–æ–∫–æ–π–Ω–æ –±—ã—Ç—å —Å–æ–±–æ–π.",
    "–¢—ã –¥–µ–ª–∞–µ—à—å –º–∏—Ä —á–µ—Å—Ç–Ω–µ–µ.",
    "–¢—ã ‚Äî —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ, –æ –∫–æ—Ç–æ—Ä–æ–º –º–µ—á—Ç–∞–ª–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä–∏.",
    "–¢–≤–æ—ë –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –∑–∞–¥–∞—ë—Ç –ø–æ–≥–æ–¥—É –≤ –∫–≤–∞—Ä—Ç–∏—Ä–µ.",
    "–¢—ã ‚Äî –º–æ–π –º–∞–ª–µ–Ω—å–∫–∏–π –¥–æ–º–∞—à–Ω–∏–π –ø—Ä–∞–∑–¥–Ω–∏–∫.",
    "–¢–≤–æ—è —Ä–µ—à–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å ‚Äî –∫—Ä–∞—Å–∏–≤–æ.",
    "–¢—ã –≤–∏–¥–∏—à—å –∫—Ä–∞—Å–æ—Ç—É —Ç–∞–º, –≥–¥–µ –¥—Ä—É–≥–∏–µ —Å–ø–µ—à–∞—Ç.",
    "–¢—ã ‚Äî –º–æ–π —Å–∞–º—ã–π –ª—é–±–∏–º—ã–π –≥–æ–ª–æ—Å.",
    "–¢–≤–æ—ë ¬´–¥–æ–±—Ä–æ–µ —É—Ç—Ä–æ¬ª –ª—É—á—à–µ –±—É–¥–∏–ª—å–Ω–∏–∫–∞.",
    "–¢—ã —É–º–µ–µ—à—å —Ö—Ä–∞–Ω–∏—Ç—å —Ç–∏—à–∏–Ω—É –∏ –¥–µ–ª–∏—Ç—å—Å—è —Å–≤–µ—Ç–æ–º.",
    "–¢—ã ‚Äî —É–ª—ã–±–∫–∞, –∫–æ—Ç–æ—Ä–∞—è –æ—Å—Ç–∞—ë—Ç—Å—è –¥–æ–ª—å—à–µ –¥–Ω—è.",
    "–° —Ç–æ–±–æ–π –ª–µ–≥—á–µ –≤–µ—Ä–∏—Ç—å –≤ —Å–µ–±—è.",
    "–¢—ã ‚Äî –º–æ–π —Å–ø–æ–∫–æ–π–Ω—ã–π –±–µ—Ä–µ–≥.",
    "–¢—ã –∫—Ä–∞—Å–∏–≤–∞ –≤ –∫–∞–∂–¥–æ–π —Å–≤–æ–µ–π ¬´–Ω–µ—Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ—Å—Ç–∏¬ª.",
    "–¢—ã ‚Äî –¥–æ–±—Ä–æ—Ç–∞, —É –∫–æ—Ç–æ—Ä–æ–π –µ—Å—Ç—å —Ö–∞—Ä–∞–∫—Ç–µ—Ä.",
    "–¢—ã ‚Äî —Ä–µ–¥–∫–∞—è —è—Å–Ω–æ—Å—Ç—å –≤ —à—É–º–Ω–æ–º –º–∏—Ä–µ.",
    "–¢–≤–æ–∏ —à–∞–≥–∏ –∑–≤—É—á–∞—Ç —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å—é.",
    "–¢—ã ‚Äî –º–æ—ë –ª—É—á—à–µ–µ ¬´–¥–∞¬ª.",
    "–¢–≤–æ—è –Ω–µ–∂–Ω–æ—Å—Ç—å ‚Äî –Ω–µ —Å–ª–∞–±–æ—Å—Ç—å, –∞ —Å–∏–ª–∞.",
    "–¢—ã —É–º–µ–µ—à—å —Å–æ–≥—Ä–µ–≤–∞—Ç—å —Å–ª–æ–≤–æ–º.",
    "–¢—ã ‚Äî —á–µ–ª–æ–≤–µ–∫, –∫–æ—Ç–æ—Ä–æ–≥–æ –∏—â—É—Ç —Å—Ç–∏—Ö–∏.",
    "–¢–µ–±–µ –∏–¥—ë—Ç —Å–≤–µ—Ç –∏–∑ –æ–∫–Ω–∞ –∏ —Å–≤–µ—Ç –≤–Ω—É—Ç—Ä–∏.",
    "–¢—ã ‚Äî –º–æ–π –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç –≤—Å–µ–ª–µ–Ω–Ω–æ–π.",
    "–¢—ã —É–º–µ–µ—à—å –±–µ—Ä–µ—á—å –≤–∞–∂–Ω–æ–µ.",
    "–° —Ç–æ–±–æ–π —Ö–æ—á–µ—Ç—Å—è —Å—Ç—Ä–æ–∏—Ç—å –ø–ª–∞–Ω—ã –∏ –∑–∞–≤—Ç—Ä–∞–∫.",
    "–¢—ã ‚Äî –ª—é–±–∏–º–∞—è —Ç–æ—á–∫–∞ –º–∞—Ä—à—Ä—É—Ç–∞.",
    "–¢–≤–æ–∏ —Ä–µ—à–µ–Ω–∏—è ‚Äî –ø—Ä–æ –º—É–¥—Ä–æ—Å—Ç—å, –∞ –Ω–µ –ø—Ä–æ —à—É–º.",
    "–¢—ã ‚Äî –º–æ–π –ª—é–±–∏–º—ã–π ¬´–¥–æ–º–æ–π¬ª.",
    "–¢—ã –¥–µ–ª–∞–µ—à—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –¥–æ–±—Ä–µ–µ.",
    "–¢—ã ‚Äî —á–µ–ª–æ–≤–µ–∫, —Ä–∞–¥–∏ –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—á–µ—Ç—Å—è –±—ã—Ç—å –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω—ã–º.",
    "–¢—ã —É–º–µ–µ—à—å –∫—Ä–∞—Å–∏–≤–æ —É—Å—Ç–∞–≤–∞—Ç—å –∏ —á–µ—Å—Ç–Ω–æ –æ—Ç–¥—ã—Ö–∞—Ç—å.",
    "–¢—ã ‚Äî –º–æ–π –º–∞–ª–µ–Ω—å–∫–∏–π —Ç–∞–ª–∞–Ω—Ç —Ä–∞–¥–æ–≤–∞—Ç—å—Å—è.",
    "–¢–≤–æ–∏ –≤–æ–ø—Ä–æ—Å—ã —É–º–Ω–µ–µ –º–Ω–æ–≥–∏—Ö –æ—Ç–≤–µ—Ç–æ–≤.",
    "–¢—ã ‚Äî –º–æ—è –ª—É—á—à–∞—è –Ω–æ–≤–æ—Å—Ç—å –¥–Ω—è.",
    "–¢—ã –∫—Ä–∞—Å–∏–≤–µ–µ –ª—é–±—ã—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤.",
    "–° —Ç–æ–±–æ–π –Ω–µ —Å—Ç—Ä–∞—à–Ω–æ –±—ã—Ç—å —Å–º–µ—à–Ω—ã–º.",
    "–¢—ã ‚Äî –º–æ—è —Å–∞–º–∞—è —Ç—ë–ø–ª–∞—è –º—ã—Å–ª—å.",
    "–í —Ç–µ–±–µ –Ω–µ–∂–Ω–æ—Å—Ç—å –Ω–µ —Å–ø–æ—Ä–∏—Ç —Å —Å–∏–ª–æ–π.",
    "–¢—ã ‚Äî —á–µ–ª–æ–≤–µ–∫, —Å –∫–æ—Ç–æ—Ä—ã–º —Ö–æ—á–µ—Ç—Å—è —Å—Ç–∞—Ä–µ—Ç—å, –Ω–µ –≤–∑—Ä–æ—Å–ª–µ—è.",
    "–¢—ã ‚Äî –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ –≤ –º—è–≥–∫–æ–π —É–ø–∞–∫–æ–≤–∫–µ.",
    "–¢–≤–æ—è —É–ª—ã–±–∫–∞ —É–º–µ–µ—Ç –ª–µ—á–∏—Ç—å —É—Å—Ç–∞–ª–æ—Å—Ç—å.",
    "–¢—ã ‚Äî –º–æ–π –ª—é–±–∏–º—ã–π —Å—é–∂–µ—Ç –±–µ–∑ —Ñ–∏–Ω–∞–ª–∞.",
    "–¢—ã –¥–µ–ª–∞–µ—à—å –ø–∞—É–∑—ã –∑–Ω–∞—á–∏–º—ã–º–∏.",
    "–¢—ã ‚Äî –≥–∞—Ä–º–æ–Ω–∏—è, –∫–æ—Ç–æ—Ä–∞—è –¥—ã—à–∏—Ç.",
    "–° —Ç–æ–±–æ–π –º–∏—Ä –Ω–µ —Ç–æ–ª—å–∫–æ –∫—Ä—É—Ç–∏—Ç—Å—è ‚Äî –æ–Ω —Ç–∞–Ω—Ü—É–µ—Ç.",
    "–¢—ã ‚Äî –≤–∫—É—Å —É—Ç—Ä–µ–Ω–Ω–µ–≥–æ —Å–≤–µ—Ç–∞.",
    "–¢—ã ‚Äî –ª—É—á—à–∏–π –æ—Ç–≤–µ—Ç –Ω–∞ ¬´–∑–∞—á–µ–º¬ª.",
    "–¢—ã ‚Äî —á–µ–ª–æ–≤–µ–∫, —Å –∫–æ—Ç–æ—Ä—ã–º –≤—Å–µ–≥–¥–∞ ¬´–≤–æ–≤—Ä–µ–º—è¬ª.",
    "–¢—ã ‚Äî –º–æ—ë —Å—á–∞—Å—Ç–ª–∏–≤–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ —Å —Ä–µ–∞–ª—å–Ω–æ—Å—Ç—å—é.",
    "–¢—ã ‚Äî –º–æ—è –µ–∂–µ–¥–Ω–µ–≤–Ω–∞—è –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å.",
]

# ====== –ó–ê–ì–†–£–ó–ö–ê –ö–û–ú–ü–õ–ò–ú–ï–ù–¢–û–í –ò–ó –§–ê–ô–õ–ê (–µ—Å–ª–∏ –µ—Å—Ç—å) ======
def load_compliments():
    path = Path("./compliments.txt")
    if path.exists():
        txt = path.read_text(encoding="utf-8")
        items = [line.strip() for line in txt.splitlines() if line.strip()]
        # –µ—Å–ª–∏ –≤ —Ñ–∞–π–ª–µ –º–µ–Ω—å—à–µ 100 ‚Äî –¥–æ–∫–∏–Ω–µ–º –∏–∑ –¥–µ—Ñ–æ–ª—Ç–æ–≤, —á—Ç–æ–±—ã –ø—É–ª –±—ã–ª –±–æ–ª—å—à–∏–º
        if len(items) < 100:
            need = 100 - len(items)
            items.extend(COMPLIMENTS_DEFAULT[:need])
        return items
    return COMPLIMENTS_DEFAULT

COMPLIMENTS = load_compliments()

# ====== –î–û–°–¢–£–ü –¢–û–õ–¨–ö–û –î–õ–Ø –ù–ï–Å ======
def get_allowed_id() -> int | None:
    if ALLOWED_FILE.exists():
        try:
            data = json.loads(ALLOWED_FILE.read_text(encoding="utf-8"))
            return int(data.get("user_id"))
        except Exception:
            return None
    return None

def set_allowed_id(user_id: int, name: str | None = None):
    ALLOWED_FILE.write_text(json.dumps({"user_id": user_id, "name": name}, ensure_ascii=False, indent=2), encoding="utf-8")

def access_granted(user_id: int) -> bool:
    allowed = get_allowed_id()
    return allowed is not None and allowed == user_id

# ====== –ë–û–¢ ======
logging.basicConfig(level=logging.INFO)
bot = Bot(BOT_TOKEN, default=DefaultBotProperties(parse_mode="HTML"))
dp = Dispatcher()

def main_keyboard():
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üíå –õ—é–±–ª—é", callback_data="love")],
        [InlineKeyboardButton(text="‚ú® –ö–æ–º–ø–ª–∏–º–µ–Ω—Ç", callback_data="compliment")],
        [InlineKeyboardButton(text="‚ùì –ü–æ–º–æ—â—å", callback_data="help")]
    ])

@dp.message(CommandStart())
async def cmd_start(msg: Message):
    allowed = access_granted(msg.from_user.id)
    if allowed:
        await msg.answer(
            f"–ü—Ä–∏–≤–µ—Ç, {GF_NAME}! ü§ç\n"
            "–Ø —Ç–æ–ª—å–∫–æ –¥–ª—è —Ç–µ–±—è. –ñ–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ:",
            reply_markup=main_keyboard(),
        )
    else:
        await msg.answer(
            "–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –±–æ—Ç. "
            "–ï—Å–ª–∏ —Ç—ã ‚Äî —Ç–∞ —Å–∞–º–∞—è, –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Å–µ–∫—Ä–µ—Ç–Ω–æ–µ —Å–ª–æ–≤–æ üåü"
        )

@dp.message(Command("help"))
async def cmd_help(msg: Message):
    if not access_granted(msg.from_user.id):
        await msg.answer("–≠—Ç–æ –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –±–æ—Ç. –í–≤–µ–¥–∏ —Å–µ–∫—Ä–µ—Ç–Ω–æ–µ —Å–ª–æ–≤–æ, –µ—Å–ª–∏ –æ–Ω–æ —É —Ç–µ–±—è –µ—Å—Ç—å.")
        return
    await msg.answer("–ö–æ–º–∞–Ω–¥—ã:\n/start ‚Äî –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ\n/love ‚Äî —Ç—ë–ø–ª–æ–µ –ø–∏—Å—å–º–æ\n/compliment ‚Äî —Å–ª—É—á–∞–π–Ω—ã–π –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç")

@dp.callback_query(F.data == "help")
async def cb_help(cb: CallbackQuery):
    await cmd_help(cb.message)
    await cb.answer()

@dp.callback_query(F.data == "compliment")
async def cb_compliment(cb: CallbackQuery):
    if not access_granted(cb.from_user.id):
        await cb.answer("–¢–æ–ª—å–∫–æ –¥–ª—è –æ–¥–Ω–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞ üåô", show_alert=True)
        return
    await cb.message.answer(choice(COMPLIMENTS))
    await cb.answer()

def days_since_anniversary() -> int:
    try:
        d = datetime.strptime(ANNIVERSARY, "%Y-%m-%d").date()
    except Exception:
        d = date.today()
    return (date.today() - d).days

def love_text() -> str:
    days = days_since_anniversary()
    return (
        f"<b>–ú–æ—ë –ø–∏—Å—å–º–æ –¥–ª—è {GF_NAME}</b> üíå\n\n"
        f"–° —Ç–æ–±–æ–π —É–∂–µ <b>{days} –¥–Ω.</b> ‚Äî –∏ –∫–∞–∂–¥—ã–π –∏–∑ –Ω–∏—Ö –¥–µ–ª–∞–µ—Ç –º–µ–Ω—è —Å—á–∞—Å—Ç–ª–∏–≤–µ–µ.\n"
        "–¢—ã ‚Äî –º–æ—ë –ª—É—á—à–µ–µ —Ä–µ—à–µ–Ω–∏–µ, –º–æ—ë —Å–ø–æ–∫–æ–π—Å—Ç–≤–∏–µ –∏ –º–æ—è –∏—Å–∫—Ä–∞.\n"
        "–°–ø–∞—Å–∏–±–æ –∑–∞ —Ç–µ–ø–ª–æ, —Å–º–µ—Ö –∏ –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ. –û–±–Ω–∏–º–∞—é —Ç–µ–±—è –º—ã—Å–ª—è–º–∏ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å. ü§ç"
    )

@dp.message(Command("love"))
async def cmd_love(msg: Message):
    if not access_granted(msg.from_user.id):
        await msg.answer("–≠—Ç–æ –ø–∏—Å—å–º–æ —è –±–µ—Ä–µ–∂–Ω–æ —Ö—Ä–∞–Ω—é –¥–ª—è –æ–¥–Ω–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞ üåô")
        return
    await msg.answer(love_text())

@dp.callback_query(F.data == "love")
async def cb_love(cb: CallbackQuery):
    if not access_granted(cb.from_user.id):
        await cb.answer("–°–µ–∫—Ä–µ—Ç–Ω–æ–µ –ø–∏—Å—å–º–æ —Ç–æ–ª—å–∫–æ –¥–ª—è –Ω–µ—ë üí´", show_alert=True)
        return
    await cb.message.answer(love_text())
    await cb.answer()

# ====== –°–ï–ö–†–ï–¢–ù–û–ï –°–õ–û–í–û (–ø—Ä–∏–≤—è–∑–∫–∞) ======
@dp.message(F.text)
async def on_text(msg: Message):
    if access_granted(msg.from_user.id):
        # –£–∂–µ –ø—Ä–∏–≤—è–∑–∞–Ω–∞ ‚Äî –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–ª—è—Ç—å —Ñ—Ä–∞–∑—ã –∫–æ–º–∞–Ω–¥–æ–π !add
        text = msg.text.strip()
        if text.startswith("!add "):
            new_c = text[5:].strip()
            if len(new_c) > 3:
                path = Path("compliments.txt")
                current = path.read_text(encoding="utf-8") if path.exists() else ""
                path.write_text((current + ("\n" if current else "") + new_c), encoding="utf-8")
                await msg.answer("–î–æ–±–∞–≤–∏–ª–∞ —ç—Ç–æ –≤ —Å–ø–∏—Å–æ–∫ –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç–æ–≤ ‚ú®")
                return
        await msg.answer("–Ø —Ä—è–¥–æ–º ü§ç –ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫–∏ –≤—ã—à–µ.")
        return

    # –ï—Å–ª–∏ –µ—â—ë –Ω–µ –ø—Ä–∏–≤—è–∑–∞–Ω–∞ ‚Äî –∂–¥—ë–º —Å–µ–∫—Ä–µ—Ç–Ω–æ–µ —Å–ª–æ–≤–æ
    if msg.text.strip().lower() == SECRET_CODE.lower():
        set_allowed_id(msg.from_user.id, msg.from_user.full_name)
        await msg.answer(
            f"–ü—Ä–∏–≤–µ—Ç, {GF_NAME}! –¢–µ–ø–µ—Ä—å —è —Ç–æ–ª—å–∫–æ –¥–ª—è —Ç–µ–±—è. –ñ–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ:",
            reply_markup=main_keyboard(),
        )
    else:
        await msg.answer("–≠—Ç–æ –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –±–æ—Ç. –ï—Å–ª–∏ —É —Ç–µ–±—è –µ—Å—Ç—å —Å–µ–∫—Ä–µ—Ç–Ω–æ–µ —Å–ª–æ–≤–æ ‚Äî –ø—Ä–∏—à–ª–∏ –µ–≥–æ üåü")

# ====== –£–¢–†–ï–ù–ù–Ø–Ø –†–ê–°–°–´–õ–ö–ê –í 08:00 –ú–°–ö ======
async def good_morning():
    user_id = get_allowed_id()
    if not user_id:
        return
    try:
        text = choice(GOOD_MORNINGS).format(name=GF_NAME)
        await bot.send_message(user_id, text)
    except Exception as e:
        logging.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É—Ç—Ä–µ–Ω–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: {e}")

async def main():
    # –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –≤ —á–∞—Å–æ–≤–æ–º –ø–æ—è—Å–µ –ú–æ—Å–∫–≤—ã
    scheduler = AsyncIOScheduler(timezone="Europe/Moscow")
    # –ö–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 08:00 –ø–æ –ú–æ—Å–∫–≤–µ
    scheduler.add_job(good_morning, "cron", hour=8, minute=0)
    scheduler.start()

    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
